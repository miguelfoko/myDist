(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"09hJ":function(e,n,t){"use strict";t.r(n);var o=t("mrSG"),a=t("CcnG"),i=t("Ip0R"),s=t("ZYCi"),r=t("nEDP"),l=function(){function e(e){this.keycloakService=e}return e.prototype.ngOnInit=function(){},e=o.c([Object(a.n)({selector:"app-authentification",template:t("hslj"),styles:[t("yvBa")]}),o.f("design:paramtypes",[r.a])],e)}(),u=t("mfNC"),c=t("gIcY"),d=t("AytR"),p=t("qfBg"),m=function(){function e(e,n,t,o,a){this.userService=e,this.formBuilder=n,this.route=t,this.router=o,this.contractService=a,this.isIn=!1,this.isSend=!1,this.message="",this.status="success",this.loading=!1,this.fromRegistration=0}return e.prototype.ngOnInit=function(){return o.b(this,void 0,void 0,function(){var e,n=this;return o.e(this,function(t){switch(t.label){case 0:return r.a.isLogged()&&this.router.navigate(["/home"]),e=this,[4,r.a.getUser()];case 1:return e.profile=t.sent(),this.route.params.subscribe(function(e){n.fromRegistration=+e.registration}),this.fromRegistration&&(this.isSend=!0,this.status="success",this.message="Enregistrement reussie, connectez-vous pour continuer !"),[4,this.userService.getCurrentUser().then(function(e){n.profile=e,n.isIn=!0}).catch(function(e){})];case 2:return t.sent(),this.initForm(),[2]}})})},e.prototype.initForm=function(){this.loginForm=this.formBuilder.group({login:["",c.g.required],password:["",c.g.required]})},Object.defineProperty(e.prototype,"form",{get:function(){return this.loginForm.controls},enumerable:!0,configurable:!0}),e.prototype.getUser=function(){return o.b(this,void 0,void 0,function(){var e=this;return o.e(this,function(n){switch(n.label){case 0:return[4,this.userService.getCurrentUser().then(function(n){e.isIn=!0,e.currentUserId=n.idUtilisateur,e.profile=n,r.a.setFullUser(n),e.router.navigate(["/home"])}).catch(function(n){alert("Problem to get User from database "+JSON.stringify(n)),e.router.navigate(["/home"])})];case 1:return n.sent(),[2]}})})},e.prototype.onClose=function(){this.isSend=!1},e.prototype.onLogin=function(){return o.b(this,void 0,void 0,function(){var e=this;return o.e(this,function(n){switch(n.label){case 0:return this.loading=!0,this.form.login.value&&this.form.password.value?[4,this.userService.getToken(this.form.login.value,this.form.password.value).then(function(n){r.a.auth.registerUrl=r.a.auth.authz.createRegisterUrl(),r.a.auth.logoutUrl=d.a.KEYCLOAK_URL+"/realms/"+d.a.KEYCLOAK_REALM+"/protocol/openid-connect/logout?redirect_uri="+d.a.baseUrl,r.a.auth.loggedIn=!0,r.a.setLogin(),r.a.setUser(e.form.login.value),r.a.setAccessToken(n.access_token,n.expires_in);var t=(new Date).getTime();t=(t+(new Date).getTime())/2,e.setToken(n.access_token,n.refresh_token,n.id_token,n.session_state,t),e.isSend=!0,e.status="success",e.message="Connexion reussie",r.a.setRole(r.a.auth.authz.realmAccess.roles),console.log(r.a.auth),e.getUser()}).catch(function(n){e.isSend=!0,e.status="danger",e.message=n.error.error_description,e.loading=!1})]:(this.isSend=!0,this.status="danger",this.message="Le login et le mot de passe sont requis",this.loading=!1,[2]);case 1:return n.sent(),[2]}})})},e.prototype.logout=function(){r.a.logout()},e.prototype.setToken=function(e,n,t,o,a){if(n?(r.a.auth.authz.refreshToken=n,r.a.auth.authz.refreshTokenParsed=this.decodeToken(n)):(delete r.a.auth.authz.refreshToken,delete r.a.auth.authz.refreshTokenParsed),t?(r.a.auth.authz.idToken=t,r.a.auth.authz.idTokenParsed=this.decodeToken(t)):(delete r.a.auth.authz.idToken,delete r.a.auth.authz.idTokenParsed),e){if(r.a.auth.authz.token=e,r.a.auth.authz.tokenParsed=this.decodeToken(e),r.a.auth.authz.sessionId=o,r.a.auth.authz.authenticated=!0,r.a.auth.authz.subject=this.decodeToken(e).sub,r.a.auth.authz.realmAccess=this.decodeToken(e).realm_access,r.a.auth.authz.resourceAccess=this.decodeToken(e).resource_access,a&&(r.a.auth.authz.timeSkew=Math.floor(a/1e3)-this.decodeToken(e).iat),null!=r.a.auth.authz.timeSkew&&r.a.auth.authz.onTokenExpired){var i=1e3*(this.decodeToken(e).exp-(new Date).getTime()/1e3+r.a.auth.authz.timeSkew);console.info("[KEYCLOAK] Token expires in "+Math.round(i/1e3)+" s"),i<=0?r.a.auth.authz.timeSkew.onTokenExpired():r.a.auth.authz.timeSkew.tokenTimeoutHandle=setTimeout(r.a.auth.authz.timeSkew.onTokenExpired,i)}return r.a.auth.authz.timeSkew}return delete r.a.auth.authz.timeSkew.token,delete r.a.auth.authz.timeSkew.tokenParsed,delete r.a.auth.authz.timeSkew.subject,delete r.a.auth.authz.timeSkew.realmAccess,delete r.a.auth.authz.timeSkew.resourceAccess,r.a.auth.authz.timeSkew.authenticated=!1,r.a.auth.authz.timeSkew},e.prototype.decodeToken=function(e){switch((e=(e=(e=e.split(".")[1]).replace("/-/g","+")).replace("/_/g","/")).length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw"Invalid token"}return e=(e=(e+"===").slice(0,e.length+e.length%4)).replace(/-/g,"+").replace(/_/g,"/"),e=decodeURIComponent(escape(atob(e))),e=JSON.parse(e)},e=o.c([Object(a.n)({selector:"app-login",template:t("nwE1"),styles:[t("2Ql/")]}),o.f("design:paramtypes",[p.a,c.b,s.a,s.c,u.a])],e)}(),h=t("Tj/N"),b=t("i9ZP"),g=function(){function e(e,n,t,o,a){this.userService=e,this.formBuilder=n,this.router=t,this.codeValueService=o,this.contractService=a,this.isIn=!1,this.isSend=!1,this.message="",this.status="success",this.loading=!1}return e.prototype.ngOnInit=function(){return o.b(this,void 0,void 0,function(){var e,n=this;return o.e(this,function(t){switch(t.label){case 0:return r.a.isLogged()&&this.router.navigate(["/home"]),e=this,[4,r.a.getUser()];case 1:return e.profile=t.sent(),[4,this.userService.getCurrentUser().then(function(e){n.profile=e,n.isIn=!0}).catch(function(e){})];case 2:return t.sent(),this.initForm(),this.getAdminToken(),[2]}})})},e.prototype.initForm=function(){this.registerForm=this.formBuilder.group({firstName:["",c.g.required],lastName:["",c.g.required],email:["",c.g.required],login:["",c.g.required],password:["",c.g.required],passwordConfirm:["",c.g.required],personResidence:["",c.g.required],personNationalite:["",c.g.required],personNumeroIdentite:["",c.g.required],personPieceIdentite:["",c.g.required],personDebutValidite:["",c.g.required],personFinValidite:["",c.g.required],personDateNaissance:["",c.g.required],personAcceptContract:["",c.g.required]})},Object.defineProperty(e.prototype,"form",{get:function(){return this.registerForm.controls},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"getMoralForm",{get:function(){return this.moralForm.controls},enumerable:!0,configurable:!0}),e.prototype.getUser=function(){return o.b(this,void 0,void 0,function(){var e=this;return o.e(this,function(n){switch(n.label){case 0:return[4,this.userService.getCurrentUser().then(function(n){console.log(n),e.isIn=!0,console.log(e.isIn),e.currentUserId=n.idUtilisateur,e.profile=n,r.a.setFullUser(n),e.router.navigate(["/pfm"])}).catch(function(e){alert("Problem to get User from database "+JSON.stringify(e))})];case 1:return n.sent(),[2]}})})},e.prototype.getAdminToken=function(){return o.b(this,void 0,void 0,function(){var e=this;return o.e(this,function(n){switch(n.label){case 0:return[4,this.userService.getToken(d.a.KEYCLOAK_ADMIN_LOGIN,d.a.KEYCLOAK_ADMIN_PASSWORD).then(function(n){e.token=n.access_token,r.a.setAccessToken(n.access_token,18e3),e.codeValueService.getIdentityTypeNew2(e.token).then(function(n){console.log(n),console.log("Type piece d'identite !"),e.typePieceIdentites=n}).catch(function(e){console.log(e),console.log("Type piece d'identite !")})}).catch(function(e){console.log(e)})];case 1:return n.sent(),[2]}})})},e.prototype.onClose=function(){this.isSend=!1},e.prototype.onRegister=function(){return o.b(this,void 0,void 0,function(){var e=this;return o.e(this,function(n){switch(n.label){case 0:return console.log("Click click"),this.registerForm.invalid?(this.isSend=!0,this.status="danger",this.message="Tous les champs du formulaire sont requis",this.loading=!1,[2]):this.form.password.value!=this.form.passwordConfirm.value?(this.isSend=!0,this.status="danger",this.message="Les 2 mots de passe doivent etre identiques",this.loading=!1,[2]):[4,this.userService.createKeycloackUser(this.form.login.value,this.form.email.value,this.form.password.value,this.form.firstName.value,this.form.lastName.value,this.token).then(function(n){console.log(n),e.isSend=!0,e.status="success",e.message="Enregistrement effectu\xe9 avec succ\xe8s !",e.loading=!1,e.localRegistering()}).catch(function(n){console.log(n),e.isSend=!0,e.status="danger",e.message=n.error.error_description,e.loading=!1})];case 1:return n.sent(),[2]}})})},e.prototype.localRegistering=function(){var e=this,n=new h.a;n.residenceUtilisateur=this.form.personResidence.value,n.nationaliteUtilisateur=this.form.personNationalite.value,n.numeroIdentiteUtilisateur=this.form.personNumeroIdentite.value,n.debutValiditeUtilisateur=this.form.personDebutValidite.value,n.finValiditeUtilisateur=this.form.personFinValidite.value,n.dateNaissanceUtilisateur=this.form.personDateNaissance.value,n.nomUtilisateur=this.form.lastName.value,n.prenomUtilisateur=this.form.firstName.value,n.loginUtilisateur=this.form.login.value,n.emailUtilisateur=this.form.email.value,console.log(n),this.userService.addUser(n,this.token).subscribe(function(n){console.log(n),e.router.navigate(["/auth/login",{registration:1}])},function(e){console.log(e)})},e.prototype.logout=function(){r.a.logout()},e.prototype.setToken=function(e,n,t,o,a){if(n?(r.a.auth.authz.refreshToken=n,r.a.auth.authz.refreshTokenParsed=this.decodeToken(n)):(delete r.a.auth.authz.refreshToken,delete r.a.auth.authz.refreshTokenParsed),t?(r.a.auth.authz.idToken=t,r.a.auth.authz.idTokenParsed=this.decodeToken(t)):(delete r.a.auth.authz.idToken,delete r.a.auth.authz.idTokenParsed),e){if(r.a.auth.authz.token=e,r.a.auth.authz.tokenParsed=this.decodeToken(e),r.a.auth.authz.sessionId=o,r.a.auth.authz.authenticated=!0,r.a.auth.authz.subject=this.decodeToken(e).sub,r.a.auth.authz.realmAccess=this.decodeToken(e).realm_access,r.a.auth.authz.resourceAccess=this.decodeToken(e).resource_access,a&&(r.a.auth.authz.timeSkew=Math.floor(a/1e3)-this.decodeToken(e).iat),null!=r.a.auth.authz.timeSkew&&r.a.auth.authz.onTokenExpired){var i=1e3*(this.decodeToken(e).exp-(new Date).getTime()/1e3+r.a.auth.authz.timeSkew);console.info("[KEYCLOAK] Token expires in "+Math.round(i/1e3)+" s"),i<=0?r.a.auth.authz.timeSkew.onTokenExpired():r.a.auth.authz.timeSkew.tokenTimeoutHandle=setTimeout(r.a.auth.authz.timeSkew.onTokenExpired,i)}return r.a.auth.authz.timeSkew}return delete r.a.auth.authz.timeSkew.token,delete r.a.auth.authz.timeSkew.tokenParsed,delete r.a.auth.authz.timeSkew.subject,delete r.a.auth.authz.timeSkew.realmAccess,delete r.a.auth.authz.timeSkew.resourceAccess,r.a.auth.authz.timeSkew.authenticated=!1,r.a.auth.authz.timeSkew},e.prototype.decodeToken=function(e){switch((e=(e=(e=e.split(".")[1]).replace("/-/g","+")).replace("/_/g","/")).length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw"Invalid token"}return e=(e=(e+"===").slice(0,e.length+e.length%4)).replace(/-/g,"+").replace(/_/g,"/"),e=decodeURIComponent(escape(atob(e))),e=JSON.parse(e)},e=o.c([Object(a.n)({selector:"app-register",template:t("TRic"),styles:[t("lR2Y")]}),o.f("design:paramtypes",[p.a,c.b,s.c,b.a,u.a])],e)}(),f=[{path:"",component:l,children:[{path:"login",component:m},{path:"register",component:g}]},{path:"pfm",loadChildren:"../pfm/pfm.module#PfmModule"}],v=function(){function e(){}return e=o.c([Object(a.K)({imports:[s.d.forChild(f)],exports:[s.d]})],e)}(),y=t("TtU4"),k=function(){function e(){}return e.prototype.ngOnInit=function(){},e=o.c([Object(a.n)({selector:"app-dialog-to-check-pfm",template:t("LOek"),styles:[t("iN+3")]}),o.f("design:paramtypes",[])],e)}(),x=t("t/Na"),S={headers:new x.d({"Content-Type":"application/json","Access-Control-Allow-Origin":"*"})},w=function(){function e(e){this.http=e,this.url=d.a.serverEndpoint+"/commun/send-code"}return e.prototype.sendCode=function(e){return this.http.get(this.url+"?telephone="+e,S).toPromise()},e=o.c([Object(a.C)({providedIn:"root"}),o.f("design:paramtypes",[x.b])],e)}(),C=function(){function e(e,n){this.dialogRef=e,this.sendCodeService=n,this.message=""}return e.prototype.ngOnInit=function(){},e.prototype.isValidPhonenumber=function(e){return/^\d{7,}$/.test(e.replace(/[\s()+\-\.]|ext/gi,""))},e.prototype.sendCode=function(){var e=this;null!==this.telephone&&this.isValidPhonenumber(this.telephone)?this.sendCodeService.sendCode(this.telephone).then(function(n){console.log(n),null!==n.accountSid&&e.close()}).catch(function(e){console.log(e)}):this.message="Mauvais num\xe9ro de t\xe9l\xe9phone",console.log(this.telephone)},e.prototype.close=function(){this.dialogRef.close()},e=o.c([Object(a.n)({selector:"app-dialog-to-otp",template:t("mj+J"),styles:[t("esvV")]}),o.f("design:paramtypes",[y.k,w])],e)}(),I=t("wUrw");t.d(n,"AuthentificationModule",function(){return N});var N=function(){function e(){}return e=o.c([Object(a.K)({declarations:[l,m,g,k,C],imports:[i.b,c.f,c.c,y.n,y.f,y.m,y.e,y.y,y.c,v,i.b,c.c,i.b,s.d,y.n,y.u,i.b,y.f,y.x,y.a,y.o,y.p,y.y,y.b,y.m,y.g,y.r,y.t,y.i.forRoot(),y.q,y.h,y.j.forRoot(),y.E.forChild(),y.s,y.D,y.e,y.c,y.w],providers:[y.v,I.a],entryComponents:[k,C]})],e)}()},"2Ql/":function(e,n){e.exports="nb-card-body {\n  padding-top: 5em;\n  padding-bottom: 5em; }\n\nh4 {\n  padding-bottom: 1.5em; }\n\ninput {\n  margin-bottom: 1em; }\n\na {\n  text-decoration: none; }\n"},LOek:function(e,n){e.exports='\n<nb-alert status="success">\n    Ce pfm existe\n  </nb-alert>\n'},TRic:function(e,n){e.exports='<div class="row justify-content-md-center">\n  <div class="col-md-7">\n\n    <nb-card>\n      <nb-card-body>\n        <nb-tabset fullWidth>\n          <nb-tab tabTitle="Personne physique">\n            <form [formGroup]="registerForm" (ngSubmit)="onRegister()" class="step-container">\n              <div class="row justify-content-md-center">\n                <div class="col-md-10">\n                    <nb-alert status="success" class="text-center">\n                      <h1 style="color: #fff; font-weight: bold;"><i class="nb-person"></i></h1>\n                      <strong>Inscrivez-vous en tant que personne physique en deux petites \xe9tapes !</strong>\n                    </nb-alert>\n\n                    <nb-alert class="bottom col-md-12" status="{{ status }}" *ngIf="isSend" fullWidth closable (close)="onClose()">\n                      {{ message }}\n                    </nb-alert>\n                    <nb-card>\n                      <nb-card-body>\n                          <nb-stepper #stepper>\n                            <nb-step  label="">\n                                <div class="input-group">\n                                  <label>Nom </label>\n                                  <input type="text" name="lastName" nbInput fullWidth placeholder="Nom" formControlName="lastName" required>\n                                </div>\n                                <div class="input-group">\n                                  <label>Pr\xe9nom </label>\n                                  <input type="text" name="firstName" nbInput fullWidth placeholder="Pr\xe9nom" formControlName="firstName" required>\n                                </div>\n\n                                <div class="input-group">\n                                  <label>Email </label>\n                                  <input type="email" name="email" nbInput fullWidth placeholder="Adresse mail" formControlName="email" required>\n                                </div>\n\n                                <div class="input-group">\n                                  <label>Login utilisateur </label>\n                                  <input type="text" name="login" nbInput fullWidth placeholder="Login" formControlName="login" required>\n                                </div>\n\n                                <div class="input-group">\n                                  <label>Mot de passe </label>\n                                  <input type="password" formControlName="password" name="password" nbInput fullWidth placeholder="Mot de passe"\n                                    required>\n                                </div>\n                                <div class="input-group">\n                                  <label>Confirmation </label>\n                                  <input type="password" formControlName="passwordConfirm" name="passwordConfirm" nbInput fullWidth placeholder="Confirmation"\n                                    required>\n                                </div>\n\n                              <button nbButton status="success" nbStepperNext >suivant</button>\n                            </nb-step>\n                            <nb-step [stepControl]="personSecondForm" label="">\n                              \n                                <div class="input-group">\n                                  <label>Pays de r\xe9sidence </label>\n                                  <input type="text" name="personResidence" nbInput fullWidth placeholder="R\xe9sidence" formControlName="personResidence">\n                                </div>\n                                <div class="input-group">\n                                  <label>Nationalit\xe9 </label>\n                                  <input type="text" name="personNationalite" nbInput fullWidth placeholder="Nationalit\xe9" formControlName="personNationalite">\n                                </div>\n\n                                <div class="input-group">\n                                  <select name="personPieceIdentite" outline status="success" formControlName="personPieceIdentite">\n                                    <option value="" disabled selected hidden>Type de la pi\xe8ce d\'identit\xe9</option>\n                                    <option *ngFor="let typePiece of typePieceIdentites" [value]="typePiece.codeValue">{{typePiece.codeValue}}</option>\n                                  </select>\n                                </div>\n\n                                <div class="input-group">\n                                  <label>Num\xe9ro d\'identit\xe9 </label>\n                                  <input type="text" name="personNumeroIdentite" nbInput fullWidth placeholder="Num\xe9ro d\'identit\xe9" formControlName="personNumeroIdentite">\n                                </div>\n\n                                <div class="input-group">\n                                  <label>D\xe9but de validit\xe9</label>\n                                  <input type="date" name="personDebutValidite" nbInput fullWidth placeholder="D\xe9but de la validit\xe9" formControlName="personDebutValidite">\n                                </div>\n\n                                <div class="input-group">\n                                  <label>Fin de validit\xe9</label>\n                                  <input type="date" name="personFinValidite" nbInput fullWidth placeholder="Fin de validit\xe9 de la pi\xe8ce d\'identit\xe9" formControlName="personFinValidite">\n                                </div>\n\n                                <div class="input-group">\n                                  <label>Date de naissance</label>\n                                  <input type="date" name="personDateNaissance" nbInput fullWidth placeholder="Date de naissance" formControlName="personDateNaissance">\n                                </div>\n\n                                <nb-checkbox id="personAcceptContract" name="personAcceptContract" formControlName="personAcceptContract"\n                                  required> J\'accepte le contrat d\'adh\xe9sion \xe0 la plateforme Microcap\n                                </nb-checkbox><br><br>\n\n                                <button nbButton outline status="success" nbStepperPrevious>pr\xe9d\xe9dent</button>\n                                <button nbButton status="success" type="submit" [disabled]="loading">\n                                  Valider\n                                  <img *ngIf="loading" src="assets/images/loader.gif" width="20px;" class="text-center" style="text-align: center;">\n                                </button>\n                            </nb-step>\n                          </nb-stepper>\n                      </nb-card-body>\n                    </nb-card>\n                    <hr>\n                    <p style="clear: both;" class="text-center">\n                      Vous avez d\xe9j\xe0 un compte ? <br><a [routerLink]="[\'/auth/login\']">Connectez-vous</a>\n                    </p>\n                </div>\n              </div>\n            </form>\n          </nb-tab>\n\n          \x3c!-- <nb-tab tabTitle="Personne morale">\n            <div class="row justify-content-md-center">\n              <div class="col-md-10">\n                <form #formPageTwo="ngForm">\n                  <nb-alert status="success" class="text-center">\n                    <h1 style="color: #fff; font-weight: bold;"><i class="nb-home"></i></h1>\n                    <strong>Inscrivez-vous en tant que personne morale en trois petites \xe9tapes !</strong>\n                  </nb-alert>\n                  <nb-card>\n                    <nb-card-body>\n                      <nb-stepper #stepper>\n                        <nb-step [stepControl]="organisationFirstForm" label="">\n                          <form [formGroup]="organisationFirstForm" (ngSubmit)="onOrganisationFirstSubmit()" class="step-container">\n                            <h6>Etape 1: Information g\xe9n\xe9rale de la personne morale</h6>\n                            <hr>\n                            <p class="lorem">\n                              <i>Les champs marqu\xe9s <span class="text-danger">*</span> sont obligatoires.</i>\n                            </p>\n                            <div class="input-group">\n                              <label>Raison sociale <span class="text-danger"> *</span></label>\n                              <input type="text" name="raisonSociale" nbInput fullWidth placeholder="Raison sociale" formControlName="raisonSociale">\n                            </div>\n                            <div class="input-group">\n                              <label>Nom commercial <span class="text-danger"> *</span></label>\n                              <input type="text" name="nomCommercial" nbInput fullWidth placeholder="Nom commercial" formControlName="nomCommercial">\n                            </div>\n                            <div class="input-group">\n                              <select name="typeOrganisation" outline status="success" formControlName="typeOrganisation">\n                                <option value="" disabled selected hidden>Type de l\'organisation *</option>\n                                <option *ngFor="let typeOrganisation of typeOrganisations" [value]="typeOrganisation.codeValue">{{typeOrganisation.codeValue}}</option>\n                              </select>\n                            </div>\n                            <button nbButton status="success" nbStepperNext [disabled]="organisationFirstForm.invalid">suivant</button>\n                          </form>\n                        </nb-step>\n                        <nb-step [stepControl]="personExistForm.value[\'personExist\']? personExistInputForm: organisationSecondForm"\n                          label="">\n                          <form [formGroup]="personExistForm" class="step-container">\n                            <h6>Etape 2: Configuration du compte administrateur</h6>\n                            <hr>\n                            <nb-alert *ngIf="personNotFoundInBd && personExistForm.value[\'personExist\']" status="warning">Ce num\xe9ro d\'adh\xe9sion ne correspond \xe0 aucun utilisateur sur Microcap. Veuillez sp\xe9cifier un autre ou cr\xe9ez un administrateur.</nb-alert>\n                            \n                              <nb-checkbox status="success" formControlName="personExist">L\'administrateur est-il d\xe9j\xe0 inscrit sur Microcap ? </nb-checkbox> \n                          </form>\n                          <br>\n                          <form [formGroup]="personExistInputForm" class="step-container" *ngIf="personExistForm.value[\'personExist\']">\n                            <label>Si oui entrez son num\xe9ro d\'adh\xe9sion <span class="text-danger"> *</span></label>\n                            <br>\n                            <input type="text" nbInput fullWidth placeholder="Num\xe9ro d\'adh\xe9sion" formControlName="numero_adhesion">\n                            <br>\n                            <nb-alert *ngIf="personFoundInBd" outline="success">\n                                Membre retrouv\xe9 sur Microcap avec succ\xe8s ! <br>\n                              <table>\n                                <tr>\n                                  <td>Nom</td>\n                                  <td><strong>: {{person.firstName}}</strong></td>\n                                </tr>\n                                <tr>\n                                  <td>Pr\xe9nom</td>\n                                  <td><strong>: {{person.lastName}}</strong></td>\n                                </tr>\n                                <tr>\n                                    <td>Adresse mail</td>\n                                    <td><strong>: {{person.email}}</strong></td>\n                                  </tr>\n                              </table>\n                            </nb-alert>\n                            <button nbButton outline status="success" nbStepperPrevious>pr\xe9d\xe9dent</button>\n                            <button nbButton *ngIf="!personFoundInBd" status="success" [disabled]="personExistInputForm.invalid" (click)="getDataOfExistingPfm()" [nbSpinner]="loadingCheckExistingPersonFlag"\n                            nbSpinnerStatus="success" nbSpinnerSize="large" nbSpinnerMessage="" >Verifier</button>\n                            <button nbButton *ngIf="personFoundInBd" status="success" nbStepperNext [disabled]="personExistInputForm.invalid">suivant</button>\n                          </form>\n\n                          <form [formGroup]="organisationSecondForm" (ngSubmit)="onOrganisationSecondSubmit()" class="step-container"\n                            *ngIf="!personExistForm.value[\'personExist\']">\n                            <h6>Etape 2: Entrez les informations de l\'administrateur</h6>\n                            <p class="lorem">\n                              <i>Les champs marqu\xe9s <span class="text-danger">*</span> sont obligatoires.</i>\n                            </p>\n                            <div class="input-group">\n                              <label>Email <span class="text-danger"> *</span></label>\n                              <input type="email" name="organisationEmail" nbInput fullWidth placeholder="Adresse mail"\n                                formControlName="organisationEmail">\n                            </div>\n\n                            <div class="input-group">\n                              <label>Nom d\'utilisateur <span class="text-danger"> *</span></label>\n                              <input type="text" name="organisationUsername" nbInput fullWidth placeholder="Login"\n                                formControlName="organisationUsername">\n                            </div>\n\n                            <div class="input-group">\n                              <label>Mot de passe <span class="text-danger"> *</span></label>\n                              <input type="password" name="organisationPassword" nbInput fullWidth placeholder="Mot de passe"\n                                formControlName="organisationPassword">\n                            </div>\n\n                            <div class="input-group">\n                              <label>Confirmer le mot de passe <span class="text-danger"> *</span></label>\n                              <input type="password" name="organisationPasswordConfirm" nbInput fullWidth placeholder="Mot de passe"\n                                formControlName="organisationPasswordConfirm">\n                            </div>\n\n                            <button nbButton status="success" nbStepperNext>suivant</button>\n                          </form>\n                        </nb-step>\n\n                        <nb-step [stepControl]="organisationThirdForm" label="">\n                          <form [formGroup]="organisationThirdForm" (ngSubmit)="onOrganisationThirdSubmit()" class="step-container">\n                              <h6>Etape 3: Informations compl\xe9mentaires de la personne morale</h6>\n                              <hr>\n                            <div class="input-group">\n                              <label>Implantation </label>\n                              <input type="text" name="implantation" nbInput fullWidth placeholder="Implantation"\n                                formControlName="implantation">\n                            </div>\n                            <div class="input-group">\n                              <label>Pays d\'immatriculation </label>\n                              <input type="text" name="paysImmatriculation" nbInput fullWidth placeholder="Pays d\'immatriculation"\n                                formControlName="paysImmatriculation">\n                            </div>\n\n                            <div class="input-group">\n                              <select name="immatriculation" outline status="success" formControlName="immatriculation">\n                                <option value="" disabled selected hidden>Type d\'immatriculation</option>\n                                <option *ngFor="let immatriculation of typeImmatriculations" [value]="immatriculation.codeValue">{{immatriculation.codeValue}}</option>\n                              </select>\n                            </div>\n\n                            <div class="input-group">\n                              <label>Num\xe9ro d\'immatriculation <span class="text-danger"> *</span></label>\n                              <input type="text" name="numeroImmatriculation" nbInput fullWidth placeholder="Num\xe9ro d\'immatriculation"\n                                formControlName="numeroImmatriculation">\n                            </div>\n\n                            <div class="input-group">\n                              <label>D\xe9but d\'immatriculation</label>\n                              <input type="date" name="dateImmatriculation" nbInput fullWidth placeholder="Date d\'immatriculation"\n                                formControlName="dateImmatriculation">\n                            </div>\n\n                            <nb-checkbox id="organisationAcceptContract" name="organisationAcceptContract"\n                              formControlName="organisationAcceptContract" required> J\'accepte le contrat d\'adh\xe9sion \xe0\n                              la plateforme Microcap\n                            </nb-checkbox> <br><br>\n\n                            <button nbButton outline status="success" nbStepperPrevious>pr\xe9d\xe9dent</button>\n                            <button nbButton status="success" nbStepperNext (click)="personFoundInBd? enrollOrganisationWithExistantPfm() : enrollOrganisation()" [disabled]="organisationThirdForm.invalid"\n                              [nbSpinner]="loadinOrganisationgFlag" nbSpinnerStatus="success" nbSpinnerSize="large"\n                              nbSpinnerMessage="">Valider</button>\n                          </form>\n                        </nb-step>\n                      </nb-stepper>\n                    </nb-card-body>\n                  </nb-card>\n                  <hr>\n                  <p style="clear: both;" class="text-center">\n                    Vous avez d\xe9j\xe0 un compte ? <br><a [routerLink]="[\'/auth/login\']">Connectez-vous</a>\n                  </p>\n                </form>\n              </div>\n            </div>\n          </nb-tab> --\x3e\n        </nb-tabset>\n      </nb-card-body>\n    </nb-card>\n\n  </div>\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\x3c!-- <div class="row justify-content-md-center">\n  \n  <div class="col-md-5">\n    <nb-card>\n      <nb-card-body>\n\n        <div class="text-center">\n          <h4> Enregistrez-vous sur Microcap </h4>\n          <i class="fa fa-user-circle fa-5x" aria-hidden="true"></i>\n        </div>\n\n        <br><br>\n        <div class="row justify-content-md-center">\n          <div class="col-md-9">\n            <form class="login" name="form" [formGroup]="registerForm" (ngSubmit)="onRegister()">\n              <nb-alert class="bottom col-md-12" status="{{ status }}" *ngIf="isSend" fullWidth closable (close)="onClose()">\n                {{ message }}\n              </nb-alert>\n              <div class="input-group">\n                <input type="text" formControlName="lastName" name="lastName" nbInput fullWidth placeholder="Noms"\n                  required>\n              </div>\n              <div class="input-group">\n                <input type="text" formControlName="firstName" name="firstName" nbInput fullWidth placeholder="Prenoms"\n                  required>\n              </div>\n              <div class="input-group">\n                <input type="text" formControlName="login" name="login" nbInput fullWidth placeholder="Login"\n                  required>\n              </div>\n              <div class="input-group">\n                <input type="email" formControlName="email" name="email" nbInput fullWidth placeholder="Email"\n                  required>\n              </div>\n              <div class="input-group">\n                <input type="password" formControlName="password" name="password" nbInput fullWidth placeholder="Mot de passe"\n                  required>\n              </div>\n              <div class="input-group">\n                <input type="password" formControlName="passwordConfirm" name="passwordConfirm" nbInput fullWidth placeholder="Confirmation"\n                  required>\n              </div>\n\n              <br><br>\n              <button nbButton fullWidth status="success" [disabled]="loading" [nbSpinner]="loadingFlag" nbSpinnerStatus="success" nbSpinnerSize="large" nbSpinnerMessage="">\n                S\'Enregistrer\n                <img *ngIf="loading" src="assets/images/loader.gif" width="20px;" class="text-center" style="text-align: center;">\n              </button>\n            </form>\n          </div>\n        </div>\n        <br>\n        <div class="row justify-content-md-center">\n          <div class="col-md-8" style="padding: 0px;">\n            <span style="float: left;"></span>\n            <span><a [routerLink]="[\'/auth/login\']"> Mot de passe oubli\xe9 ? </a></span>\n            <hr>\n            <p style="clear: both;" class="text-center">\n              <br><a [routerLink]="[\'/auth/login\']">J\'ai deja un compte Microcap</a>\n            </p>\n          </div>\n        </div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n \n</div> --\x3e\n'},esvV:function(e,n){e.exports=".your-phone {\n  color: black; }\n\n.send-button-container {\n  margin-top: 1%; }\n\n.message-container {\n  margin-top: 20%;\n  color: black; }\n"},hslj:function(e,n){e.exports='<nb-layout>\n  <nb-layout-header>\n      <img src="../../assets/images/logomicrocap_1.png" width="100" height="50" alt="" class="logo">\n    <h1><a [routerLink]="[\'/home\']"><i class="nb-arrow-left" ></i> <i class="nb-home"></i> </a></h1>     \n  </nb-layout-header>\n\n  <nb-layout-column>\n\n    <router-outlet></router-outlet>\n    \n\n  </nb-layout-column>\n  \n</nb-layout>'},"iN+3":function(e,n){e.exports=""},lR2Y:function(e,n){e.exports="input, select {\n  margin-bottom: 1em; }\n\n.bottom-1 {\n  margin-bottom: 1em; }\n\nbutton {\n  margin-right: 10px; }\n\na {\n  text-decoration: none; }\n\n:host nb-tab {\n  padding: 1.25rem; }\n\n.error {\n  color: red; }\n\n.form-control-danger {\n  border: 2px #ff0000 solid;\n  border-radius: 3px; }\n\n/* Select */\n\nselect {\n  width: 100%;\n  border: 2px #dadfe6 solid;\n  border-radius: 5px;\n  height: 45px;\n  background-color: transparent; }\n\nselect:invalid {\n  color: gray; }\n"},"mj+J":function(e,n){e.exports='<nb-layout center>\n  <nb-layout-header>Obtention du mot de passe par sms</nb-layout-header>\n  <nb-layout-column>\n\n    <div class="row">\n      <div class="col-md-2"></div>\n      <div class="col-md-8">\n\n        <div>\n          <label class="your-phone">Votre num\xe9ro : </label>\n          <input type="text" [(ngModel)]="telephone" nbInput fullWidth shape="semi-round" placeholder="Saiser votre num\xe9ro de t\xe9l\xe9phone ...">\n        </div>\n\n      </div>\n      <div class="col-md-2"></div>\n    </div>\n\n    <div class="row send-button-container">\n      <div class="col-md-4"></div>\n      <div class="col-md-4  text-center">\n        <button (click)="sendCode()" nbButton size="small" status="success">Envoyer le code</button>\n      </div>\n      <div class="col-md-4"></div>\n    </div>\n\n    <div class="row message-container">\n        <div class="col-md-4"></div>\n        <div class="col-md-4  text-center">\n          {{ message }}\n        </div>\n        <div class="col-md-4"></div>\n      </div>\n\n  </nb-layout-column>\n</nb-layout>'},nwE1:function(e,n){e.exports='<div class="row justify-content-md-center">\n  \n  <div class="col-md-5">\n    <nb-card>\n      <nb-card-body>\n\n        <div class="text-center">\n          <h4> Connexion sur Microcap </h4>\n          <i class="fa fa-user-circle fa-5x" aria-hidden="true"></i>\n        </div>\n\n        <br><br>\n        <div class="row justify-content-md-center">\n          <div class="col-md-9">\n            <form class="login" name="form" [formGroup]="loginForm" (ngSubmit)="onLogin()">\n              <nb-alert class="bottom col-md-12" status="{{ status }}" *ngIf="isSend" fullWidth closable (close)="onClose()">\n                {{ message }}\n              </nb-alert>\n              <div class="input-group">\n                <input type="text" formControlName="login" name="username" nbInput fullWidth placeholder="Login"\n                  required>\n              </div>\n              <div class="input-group">\n                <input type="password" formControlName="password" name="password" nbInput fullWidth placeholder="Mot de passe"\n                  required>\n              </div>\n\n              <nb-checkbox id="rememberMeBox" name="rememberMe"> Remember me\n              </nb-checkbox>\n              <br><br>\n              <button nbButton fullWidth status="success" [disabled]="loading" [nbSpinner]="loadingFlag" nbSpinnerStatus="success" nbSpinnerSize="large" nbSpinnerMessage="">\n                Se connecter\n                <img *ngIf="loading" src="assets/images/loader.gif" width="20px;" class="text-center" style="text-align: center;">\n              </button>\n            </form>\n          </div>\n        </div>\n        <br>\n        <div class="row justify-content-md-center">\n          <div class="col-md-8" style="padding: 0px;">\n            <span style="float: left;"></span>\n            <span><a [routerLink]="[\'/auth/login\']"> Mot de passe oubli\xe9 ? </a></span>\n            <hr>\n            <p style="clear: both;" class="text-center">\n              Vous n\'avez pas encore de compte ? <br><a [routerLink]="[\'/auth/register\']">Cr\xe9ez un compte Microcap</a>\n            </p>\n          </div>\n        </div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n \n</div>\n'},yvBa:function(e,n){e.exports=".logo {\n  margin-right: 5em; }\n\na {\n  text-decoration: none; }\n"}}]);